# Style and naming rules for c# code files.

root = true
[*.cs]

###############################
# Core EditorConfig Options   #
###############################

indent_style = tab

###############################
# .NET Coding Conventions     #
###############################

# Organize usings
dotnet_sort_system_directives_first = true

# this. preferences
dotnet_style_qualification_for_field = true:warning
dotnet_style_qualification_for_property = true:warning
dotnet_style_qualification_for_method = true:none
dotnet_style_qualification_for_event = true:warning

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:none
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:none
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:none
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:none

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning
dotnet_style_readonly_field = true:warning

# Expression-level preferences
dotnet_style_object_initializer = true:none
dotnet_style_collection_initializer = true:none
dotnet_style_explicit_tuple_names = true:none
dotnet_style_null_propagation = true:none
dotnet_style_coalesce_expression = true:none
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:none
dotnet_style_prefer_inferred_tuple_names = false:warning
dotnet_style_prefer_inferred_anonymous_type_member_names = false:warning
dotnet_style_prefer_auto_properties = false:none
dotnet_style_prefer_conditional_expression_over_assignment = false:none
dotnet_style_prefer_conditional_expression_over_return = false:none

###############################
# Naming Conventions          #
###############################

# Style Definitions

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

dotnet_naming_style.field_name_style.capitalization = camel_case
dotnet_naming_style.field_name_style.required_prefix = _

dotnet_naming_style.interface_name_style.capitalization = pascal_case
dotnet_naming_style.interface_name_style.required_prefix = I

# Symbol Definitions

dotnet_naming_symbols.const_fields.applicable_accessibilities = *
dotnet_naming_symbols.const_fields.applicable_kinds = field
dotnet_naming_symbols.const_fields.required_modifiers = const

dotnet_naming_symbols.private_static_readonly_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_static_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.private_static_readonly_fields.required_modifiers = readonly, static

dotnet_naming_symbols.internal_static_readonly_fields.applicable_accessibilities = internal
dotnet_naming_symbols.internal_static_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.internal_static_readonly_fields.required_modifiers = readonly, static

dotnet_naming_symbols.private_readonly_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.private_readonly_fields.required_modifiers = readonly

dotnet_naming_symbols.fields.applicable_accessibilities = *
dotnet_naming_symbols.fields.applicable_kinds = field

dotnet_naming_symbols.interfaces.applicable_accessibilities = *
dotnet_naming_symbols.interfaces.applicable_kinds = interface

dotnet_naming_symbols.pascal_case_symbols.applicable_accessibilities = *
dotnet_naming_symbols.pascal_case_symbols.applicable_kinds = class, struct, enum, property, method, event

# Rules

dotnet_naming_rule.interface.severity = warning
dotnet_naming_rule.interface.style = interface_name_style
dotnet_naming_rule.interface.symbols = interfaces

dotnet_naming_rule.const_field.severity = warning
dotnet_naming_rule.const_field.style = pascal_case_style
dotnet_naming_rule.const_field.symbols = const_fields

dotnet_naming_rule.private_static_readonly_field.severity = warning
dotnet_naming_rule.private_static_readonly_field.style = pascal_case_style
dotnet_naming_rule.private_static_readonly_field.symbols = private_static_readonly_fields

dotnet_naming_rule.internal_static_readonly_field.severity = warning
dotnet_naming_rule.internal_static_readonly_field.style = pascal_case_style
dotnet_naming_rule.internal_static_readonly_field.symbols = internal_static_readonly_fields

dotnet_naming_rule.private_readonly_field.severity = warning
dotnet_naming_rule.private_readonly_field.style = field_name_style
dotnet_naming_rule.private_readonly_field.symbols = private_readonly_fields

dotnet_naming_rule.field.severity = warning
dotnet_naming_rule.field.style = field_name_style
dotnet_naming_rule.field.symbols = fields

dotnet_naming_rule.pascal_case.severity = warning
dotnet_naming_rule.pascal_case.style = pascal_case_style
dotnet_naming_rule.pascal_case.symbols = pascal_case_symbols

###############################
# C# Coding Conventions       #
###############################

# var preferences
csharp_style_var_for_built_in_types = false:none
csharp_style_var_when_type_is_apparent = false:none
csharp_style_var_elsewhere = false:none

# Expression-bodied members
csharp_style_expression_bodied_methods = false:none
csharp_style_expression_bodied_constructors = false:none
csharp_style_expression_bodied_operators = false:none
csharp_style_expression_bodied_properties = false:none
csharp_style_expression_bodied_indexers = false:none
csharp_style_expression_bodied_accessors = false:none

# Pattern matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = false:warning
csharp_style_pattern_matching_over_as_with_null_check = false:warning

# Null-checking preferences
csharp_style_throw_expression = false:warning
csharp_style_conditional_delegate_call = false:warning

# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:warning

# Expression-level preferences
csharp_prefer_braces = true:warning
csharp_style_deconstructed_variable_declaration = true:none
csharp_prefer_simple_default_expression = true:none
csharp_style_pattern_local_over_anonymous_function = true:none
csharp_style_inlined_variable_declaration = true:none

###############################
# C# Formatting Rules         #
###############################

# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# Space preferences
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false

# Wrapping preferences
csharp_preserve_single_line_statements = false
csharp_preserve_single_line_blocks = true
